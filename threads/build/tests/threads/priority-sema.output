Kernel command line: -q run priority-sema
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  153,804,800 loops/s.
Boot complete.
Executing 'priority-sema':
(priority-sema) begin
Interrupt 0x0e (#PF Page-Fault Exception) at rip=800420a6bf
 cr2=fffffffffffffff8 error=               0
rax ffffffffffffffe0 rbx 0000000000204400 rcx 000000800423c020 rdx 0000000000000000
rsp 0000008004000df0 rbp 0000008004000e50 rsi 000000800423b020 rdi 000000800423b038
rip 000000800420a6bf r8 0000008004000e18  r9 0000008004210a6c r10 0000000000000000
r11 0000000000000000 r12 0000000000000000 r13 0000000000000000 r14 0000000000000000
r15 0000000000000000 rflags 00200083
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../threads/interrupt.c:361 in intr_handler(): Unexpected interrupt
Call stack: 0x8004213668 0x8004208ac2 0x8004208e74 0x80042143ee 0x8004214789 0x8004209c15 0x80042193f8 0x8004216ade 0x8004206636 0x8004206783 0x8004206120.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 24 ticks
Thread: 0 idle ticks, 24 kernel ticks, 0 user ticks
Console: 1